name: build


on: [push]

jobs:
  # build-linux-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: install dependencies
  #     run: |
  #         sudo apt-get update
  #         sudo apt-get install libfuse-dev
  #   - name: prepare environment
  #     run: |
  #         echo "target_triplet=`gcc -dumpmachine`" >> $GITHUB_ENV
  #   - name: fetch libplist
  #     uses: dawidd6/action-download-artifact@v2
  #     with:
  #       github_token: ${{secrets.GITHUB_TOKEN}}
  #       workflow: build.yml
  #       name: libplist-latest_${{env.target_triplet}}
  #       repo: libimobiledevice/libplist
  #   - name: fetch libusbmuxd
  #     uses: dawidd6/action-download-artifact@v2
  #     with:
  #       github_token: ${{secrets.GITHUB_TOKEN}}
  #       workflow: build.yml
  #       name: libusbmuxd-latest_${{env.target_triplet}}
  #       repo: libimobiledevice/libusbmuxd
  #   - name: fetch libimobiledevice-glue
  #     uses: dawidd6/action-download-artifact@v2
  #     with:
  #       github_token: ${{secrets.GITHUB_TOKEN}}
  #       workflow: build.yml
  #       name: libimobiledevice-glue-latest_${{env.target_triplet}}
  #       repo: libimobiledevice/libimobiledevice-glue
  #   - name: fetch libimobiledevice
  #     uses: dawidd6/action-download-artifact@v2
  #     with:
  #       github_token: ${{secrets.GITHUB_TOKEN}}
  #       workflow: build.yml
  #       name: libimobiledevice-latest_${{env.target_triplet}}
  #       repo: libimobiledevice/libimobiledevice
  #   - name: install external dependencies
  #     run: |
  #         mkdir extract
  #         for I in *.tar; do
  #           tar -C extract -xvf $I
  #         done
  #         rm -rf extract/lib
  #         sudo cp -r extract/* /
  #         sudo ldconfig
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0
  #   - name: autogen
  #     run: ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
  #   - name: make
  #     run: make
  #   - name: make install
  #     run: sudo make install
  build-windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64 }
        ]
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        release: false
        update: false
        install: >-
          base-devel
          git
          mingw-w64-${{ matrix.arch }}-gcc
          make
          libtool
          autoconf
          automake-wrapper
          libfuse-dev
    - name: prepare environment
      run: |
          dest=`echo ${{ matrix.msystem }} |tr [:upper:] [:lower:]`
          echo "dest=$dest" >> $GITHUB_ENV
          echo "target_triplet=`gcc -dumpmachine`" >> $GITHUB_ENV
          git config --global core.autocrlf false
    - name: fetch libplist
      uses: dawidd6/action-download-artifact@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build.yml
        name: libplist-latest_${{ matrix.arch }}-${{ env.dest }}
        repo: libimobiledevice/libplist
    - name: fetch libusbmuxd
      uses: dawidd6/action-download-artifact@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build.yml
        name: libusbmuxd-latest_${{ matrix.arch }}-${{ env.dest }}
        repo: libimobiledevice/libusbmuxd
    - name: fetch libimobiledevice-glue
      uses: dawidd6/action-download-artifact@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build.yml
        name: libimobiledevice-glue-latest_${{ matrix.arch }}-${{ env.dest }}
        repo: libimobiledevice/libimobiledevice-glue
    - name: fetch libimobiledevice
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build.yml
        name: libimobiledevice-latest_${{ matrix.arch }}-${{ env.dest }}
        repo: libimobiledevice/libimobiledevice
    - name: install external dependencies
      run: |
          mkdir extract
          for I in *.tar; do
            tar -C extract -xvf $I
          done
          cp -r extract/* /
    - uses: actions/checkout@v4
    - name: autogen
      run: ./autogen.sh CC=gcc CXX=g++ --enable-debug
    - name: make
      run: make
    - name: make install
      run: make install
    - name: prepare artifact
      run: |
          mkdir -p dest
          DESTDIR=`pwd`/dest make install
          tar -C dest -cf ifuse.tar ${{ env.dest }}
    - name: publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: ifuse-latest_${{ matrix.arch }}-${{ env.dest }}
        path: ifuse.tar
